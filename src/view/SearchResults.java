package view;

import base.ModelList;
import controller.AuthController;
import model.*;
import model.enums.State;
import util.*;
import util.Event;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

public class SearchResults extends MyFrame {
    private JPanel mainPanel;
    private JList<Product> productList;
    private JTextField nameField;
    private JTextArea descriptionField;
    private JTextField categoryField;
    private JTextField conditionField;
    private JButton exchangeButton;
    private JTextField ownerField;
    private JTextArea addressField;


    private ArrayListModel<Product> productModel;

    public SearchResults() {
        super();

        setTitle("Resultados da busca");
        setSize(750, 450);

        setContentPane(mainPanel);

        onOpen.addListener(e -> {
            centerOnScreen();

            if (e.data.length > 0 && e.data[0] instanceof List) {
                fill((List) e.data[0]);
            }

            clearDetails();
        });


        productModel = new ArrayListModel<>(new ArrayList<>());
        productList.setModel(productModel);
        productList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        productList.addListSelectionListener(e -> {
            Product p = productList.getSelectedValue();
            if (p != null) {
                fillDetails(p);
                exchangeButton.setEnabled(true);
            }
        });


        productList.addMouseListener(new ListDoubleClickAdapter<Product>(x -> {
            if (x != null) {
                createExchange(x);
            }
        }));

        productList.setCellRenderer(new StringCellRenderer<Product>(x -> x.getName()));

        exchangeButton.addActionListener(e -> {
            Product p = productList.getSelectedValue();
            if (p != null) {
                createExchange(p);
            }
        });
    }

    private void fill(List<Product> list) {
        productModel.setList(list);

        productList.clearSelection();
        mainPanel.grabFocus();

        exchangeButton.setEnabled(false);
    }

    private void fillDetails(Product product) {
        nameField.setText(product.getName());
        descriptionField.setText(product.getDescription());
        conditionField.setText(product.getCondition().getLabel());
        categoryField.setText(product.getCategory().getName());
        ownerField.setText(product.getUser().getName());

        List<Counter> counters = Counter.store.List(x ->
                x.getItems()
                        .getList()
                        .stream()
                        .filter(counterItem -> {
                            return counterItem.getProductId() == product.getId();
                        })
                        .collect(Collectors.toList())
                        .size() > 0
        );

        List<String> addressses = counters.stream().map(x -> x.getAddress().toString()).collect(Collectors.toList());

        addressField.setText(String.join("\n\n", addressses));
    }

    private void clearDetails() {
        nameField.setText("");
        descriptionField.setText("");
        conditionField.setText("");
        categoryField.setText("");
        ownerField.setText("");
        addressField.setText("");
    }

    private void createExchange(Product product) {
        Exchange exchange = Exchange.builder()
                .user1Id(product.getUserId())
                .user2Id(AuthController.getCurrentUser().getId())
                .dateStarted(new Date())
                .user1Products(new ModelList<>(Product.store, Arrays.asList(product.getId())))
                .user2Products(new ModelList<>(Product.store))
                .build();

        ViewBus.get().open(ExchangeView.class, exchange);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(spacer1, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipadx = 250;
        mainPanel.add(panel1, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Nome");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer2, gbc);
        nameField = new JTextField();
        nameField.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(nameField, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Descrição");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.ipadx = 5;
        panel1.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Categoria");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label3, gbc);
        categoryField = new JTextField();
        categoryField.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(categoryField, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Condição");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label4, gbc);
        conditionField = new JTextField();
        conditionField.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(conditionField, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        exchangeButton = new JButton();
        exchangeButton.setText("Trocar");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(exchangeButton, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(spacer3, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Dono");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label5, gbc);
        ownerField = new JTextField();
        ownerField.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(ownerField, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Endereço");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label6, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(scrollPane1, gbc);
        descriptionField = new JTextArea();
        descriptionField.setEditable(false);
        descriptionField.setLineWrap(true);
        descriptionField.setWrapStyleWord(false);
        scrollPane1.setViewportView(descriptionField);
        final JScrollPane scrollPane2 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(scrollPane2, gbc);
        addressField = new JTextArea();
        addressField.setEditable(false);
        addressField.setLineWrap(true);
        scrollPane2.setViewportView(addressField);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 20;
        mainPanel.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 20;
        mainPanel.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 20;
        mainPanel.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 20;
        mainPanel.add(spacer7, gbc);
        final JScrollPane scrollPane3 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipadx = 250;
        mainPanel.add(scrollPane3, gbc);
        productList = new JList();
        scrollPane3.setViewportView(productList);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
